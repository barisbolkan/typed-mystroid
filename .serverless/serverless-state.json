{
  "service": {
    "service": "mystroid",
    "serviceObject": {
      "name": "mystroid"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "iamManagedPolicies": [
        "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      ],
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CronLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mystroid-dev-cron"
            }
          },
          "StreamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mystroid-dev-stream"
            }
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mystroid-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "mystroid",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mystroid-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mystroid-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          "arn:aws:sqs:us-east-1:847815818785:mystroid-streaming-queue"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "mystroid",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
              ]
            }
          },
          "CronLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mystroid/dev/1645540581672-2022-02-22T14:36:21.672Z/mystroid.zip"
              },
              "Handler": "_optimize/mystroid-dev-cron/src/cron.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "mystroid-dev-cron",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CronLogGroup"
            ]
          },
          "StreamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mystroid/dev/1645540581672-2022-02-22T14:36:21.672Z/mystroid.zip"
              },
              "Handler": "_optimize/mystroid-dev-stream/src/streaming.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "mystroid-dev-stream",
              "MemorySize": 1024,
              "Timeout": 120,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "StreamLogGroup"
            ]
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mystroid/dev/1645540581672-2022-02-22T14:36:21.672Z/mystroid.zip"
              },
              "Handler": "_optimize/mystroid-dev-api/src/api.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "mystroid-dev-api",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "CronLambdaVersionuHuUdrdFFrA31jtohw0Dusf5oMIupaSEktdh0cxAB5s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CronLambdaFunction"
              },
              "CodeSha256": "8R4vyK/f8pIkFEkh7cDHGcHtX4M86j+wdCf3qWY2evk="
            }
          },
          "StreamLambdaVersionHZ2pdgksCV9iLABmYW4wkZYaCpvWSntgftKpQKsrs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StreamLambdaFunction"
              },
              "CodeSha256": "8R4vyK/f8pIkFEkh7cDHGcHtX4M86j+wdCf3qWY2evk="
            }
          },
          "ApiLambdaVersionPiMw9creCVHeMey5mEv4rNtioktRjHMxmFscOjiSac": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "8R4vyK/f8pIkFEkh7cDHGcHtX4M86j+wdCf3qWY2evk="
            }
          },
          "CronEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(1 hour)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "CronLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "cronSchedule"
                }
              ]
            }
          },
          "CronLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CronLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CronEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-mystroid",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceAsteroid": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "asteroid",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAsteroidIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAsteroid"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAsteroidGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.page": true,
                "method.request.querystring.limit": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAsteroid"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayMystroidRequestValidator"
              }
            },
            "DependsOn": [
              "ApiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAsteroidIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAsteroidIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ApiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMystroidRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "mystroid-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1645540405881": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAsteroidGet",
              "ApiGatewayMethodAsteroidIdVarGet"
            ]
          },
          "ApiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StreamEventSourceMappingSQSMystroidstreamingqueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:sqs:us-east-1:847815818785:mystroid-streaming-queue",
              "FunctionName": {
                "Fn::GetAtt": [
                  "StreamLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "GatewayResponseResourceNotFound": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "RestApiId": "f5ev10st59",
              "ResponseType": "BAD_REQUEST_BODY",
              "StatusCode": "422",
              "ResponseTemplates": {
                "application/json": "{\"message\": \"$context.error.message\", \"error\": \"$context.error.validationErrorString\"}"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-mystroid-dev-ServerlessDeploymentBucketName"
            }
          },
          "CronLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CronLambdaVersionuHuUdrdFFrA31jtohw0Dusf5oMIupaSEktdh0cxAB5s"
            },
            "Export": {
              "Name": "sls-mystroid-dev-CronLambdaFunctionQualifiedArn"
            }
          },
          "StreamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StreamLambdaVersionHZ2pdgksCV9iLABmYW4wkZYaCpvWSntgftKpQKsrs"
            },
            "Export": {
              "Name": "sls-mystroid-dev-StreamLambdaFunctionQualifiedArn"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionPiMw9creCVHeMey5mEv4rNtioktRjHMxmFscOjiSac"
            },
            "Export": {
              "Name": "sls-mystroid-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-mystroid-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-typescript",
      "serverless-plugin-optimize",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "cron": {
        "handler": "_optimize/mystroid-dev-cron/src/cron.handler",
        "events": [
          {
            "schedule": {
              "rate": [
                "rate(1 hour)"
              ],
              "enabled": true
            }
          }
        ],
        "name": "mystroid-dev-cron",
        "package": {
          "exclude": [
            "**"
          ],
          "include": [
            "_optimize/mystroid-dev-cron/**"
          ]
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CronLambdaVersionuHuUdrdFFrA31jtohw0Dusf5oMIupaSEktdh0cxAB5s"
      },
      "stream": {
        "handler": "_optimize/mystroid-dev-stream/src/streaming.handler",
        "timeout": 120,
        "events": [
          {
            "sqs": "arn:aws:sqs:us-east-1:847815818785:mystroid-streaming-queue"
          }
        ],
        "name": "mystroid-dev-stream",
        "package": {
          "exclude": [
            "**"
          ],
          "include": [
            "_optimize/mystroid-dev-stream/**"
          ]
        },
        "memory": 1024,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "StreamLambdaVersionHZ2pdgksCV9iLABmYW4wkZYaCpvWSntgftKpQKsrs"
      },
      "api": {
        "handler": "_optimize/mystroid-dev-api/src/api.handler",
        "events": [
          {
            "http": {
              "path": "asteroid",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.querystring.page": true,
                  "method.request.querystring.limit": true
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "asteroid/{id}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "mystroid-dev-api",
        "package": {
          "exclude": [
            "**"
          ],
          "include": [
            "_optimize/mystroid-dev-api/**"
          ]
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionPiMw9creCVHeMey5mEv4rNtioktRjHMxmFscOjiSac"
      }
    },
    "resources": {
      "Resources": {
        "GatewayResponseResourceNotFound": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "RestApiId": "f5ev10st59",
            "ResponseType": "BAD_REQUEST_BODY",
            "StatusCode": "422",
            "ResponseTemplates": {
              "application/json": "{\"message\": \"$context.error.message\", \"error\": \"$context.error.validationErrorString\"}"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yaml",
    "initialServerlessConfig": {
      "service": "mystroid",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Baris\\Desktop\\BARIS\\Projects\\mystroid\\.build\\.serverless\\mystroid.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/mystroid/dev/1645540581672-2022-02-22T14:36:21.672Z",
    "artifact": "mystroid.zip"
  }
}